.flex {
	display:flex;
	flex-direction: column;
	@media (min-width: breakpoint('medium')) {
		flex-direction: row;
		flex-flow: row wrap;
	}
	&.reverse {
		flex-direction: column-reverse;
		@media (min-width: breakpoint('medium')) {
			flex-direction: row-reverse;
		}
	}
	> * {
		flex: 1;
	}
	> .divider {
		background: gray(1);
		height: 100px;
		flex: 0 0 2px;
		margin: 0 $gap;
	}
}

$flex-align: (
	top: flex-start,
	bottom: flex-end,
	center: center
);

@each $name, $position in $flex-align {
	.align-#{$name} {
		align-self: $position;
		align-items: $position;
	}
}


$cols: (
	1: 1 * 100%,
	2: 1 / 2 *100%,
	3: 1 / 3 *100%,
	4: 1 / 4 *100%,
	5: 1 / 5 *100%,
	6: 1 / 6 *100%
);



@each $name, $percent in $cols {
	.cols-#{$name} {
		@extend .flex;
		> * {
			flex-basis: 100%;
			//flex: 0 0 $percent;
			flex:1;
			@media (min-width: breakpoint('medium')) {
				//flex-basis: $percent * 100%;
				//flex: 0 0 $percent*100%;
				flex: $percent;
				width: $percent;
				flex-grow: inherit;
			}
		}
		> .summary {
			align-items: center;
			align-self: center;
			@media (min-width: breakpoint('medium')) {
				padding-right: 0;
			}
		}
		> figure {
			margin: 0;
			&.hero {
				&.align-bottom {
					text-align: center;
					@media (max-width: breakpoint('medium')) {
						flex-basis: 100%;
						width: 100%;
					}
					@media (min-width: breakpoint('medium')) {
						text-align: right;
					}
					img {
						margin: 0 auto $gap;
						@media (min-width: breakpoint('medium')) {
					    	margin: 0 $gap*2 $gap*2 auto;
					    }
					}
				}
			}
			img {
				max-width: 100%;
				height: auto;
			}
		}
	}
}

.hero-cols {
	@extend .flex;
	> :nth-child(1) {
		width: 100%;
		@media (min-width: breakpoint('medium')) {
			flex: 65%;
		}
		@media (min-width: breakpoint('large')) {
			flex: 60%;
		}

	}
	> :nth-child(2) {
		flex: 1;
	}
}

.summary {
	@extend .adjust-padding;
	&.hero {
		padding: $gap;
	    flex-grow: inherit;
		@media (min-width: breakpoint('large')) {
			padding: $gap*2 0px $gap*2 $gap*2;
		}
	}
}