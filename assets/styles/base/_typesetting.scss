// config/_breakpoints.scss
$breakpoints: (
	'small':    480px,
	'medium':   720px,
	'large':    960px,
	'x-large':  1280px
);

// config/_typography.scss
$text-sizing: (
	'milli': (
	    'small': (
			'font-size-em': 0.702em,
			'font-size': 12px,
			'line-height': 1.45
	    ),
	    'large': (
			'font-size-em': 0.579em,
			'font-size': 12px,
			'line-height': 1.45
	    )
	),
	'centi': (
	    'small': (
			'font-size-em': 0.79em,
			'font-size': 12px,
			'line-height': 1.45
	    ),
	    'large': (
			'font-size-em': 0.694em,
			'font-size': 12px,
			'line-height': 1.45
	    )
	),
	'deci': (
		'small': (
			'font-size-em': 0.889em,
			'font-size': 14px,
			'line-height': 1.45
		),
		'large': (
			'font-size-em': 0.833em,
			'font-size': 14px,
			'line-height': 1.45
		)
	),
	'base': (
		'small': (
			'font-size-em': 1em,
			'font-size': 16px,
			'line-height': 1.45
		),
		'large': (
			'font-size-em': 1em,
			'font-size': 16px,
			'line-height': 1.65
		)

	),
	'deca': (
		'small': (
			'font-size-em': 1.125em,
			'font-size': 18px,
			'line-height': 1.2
		),
		'large': (
			'font-size-em': 1.2em,
			'font-size': 20px,
			'line-height': 1.2
		)
	),
	'hecto': (
		'small': (
			'font-size-em': 1.266em,
			'font-size': 22px,
			'line-height': 1.2
		),
		'large': (
			'font-size-em': 1.44em,
			'font-size': 24px,
			'line-height': 1.2
		)
	),
	'kilo': (
		'small': (
			'font-size-em': 1.424em,
			'font-size': 24px,
			'line-height': 1.1
		),
		'large': (
			'font-size-em': 1.728em,
			'font-size': 28px,
			'line-height': 1.1
		)
	),
	'mega': (
		'small': (
			'font-size-em': 1.602em,
			'font-size': 36px,
			'line-height': 1.1
		),
		'large': (
			'font-size-em': 2.074em,
			'font-size': 40px,
			'line-height': 1.1
		)
	)
);


// lib/functions/_responsive.scss
@function breakpoint($breakpoint-name) {
  $breakpoint-value: map-get($breakpoints, $breakpoint-name);

  @if $breakpoint-value {
    @return $breakpoint-value;
  }

  @warn "Breakpoint '#{$breakpoint-name}' not found in $breakpoints";
}

// lib/functions/_typography.scss
@function text-breakpoints-for($text-size) {
  $text-breakpoints: map-get($text-sizing, $text-size);

  @if $text-breakpoints {
    @return $text-breakpoints;
  }

  @warn "Text size '#{$text-size}' not found in $text-sizing";
}

@function text-properties-for($text-size, $breakpoint-name) {
  $text-breakpoints: text-breakpoints-for($text-size);
  $text-properties: map-get($text-breakpoints, $breakpoint-name);

  @if $text-properties {
    @return $text-properties;
  }

  @warn "Breakpoint '#{$breakpoint-name}' for text size '#{$text-size}' was not found";
}

// lib/mixins/_responsive.scss
@mixin respond-above($breakpoint-name) {
  $breakpoint-value: breakpoint($breakpoint-name);

  @if $breakpoint-value {
    @media screen and (min-width: $breakpoint-value) {
      @content;
    }
  }
}

// lib/mixins/_typography.scss
@mixin text-size($text-size, $breakpoint-name: 'small') {
	$text-size-properties: text-properties-for($text-size, $breakpoint-name);

	@if $text-size-properties {
		font-size: map-get($text-size-properties, 'font-size');
		font-size: map-get($text-size-properties, 'font-size-em');
		line-height: map-get($text-size-properties, 'line-height');
	}
}

@mixin responsive-text-size($text-size, $default-breakpoint: 'small') {
	@include text-size($text-size, $default-breakpoint);

	$text-breakpoints-map: text-breakpoints-for($text-size);
	$text-breakpoints-keys: map-keys($text-breakpoints-map);

	@each $breakpoint-name in $text-breakpoints-keys {
		@if $breakpoint-name != $default-breakpoint {
			@include respond-above($breakpoint-name) {
			@include text-size($text-size, $breakpoint-name);
			}
		}
	}
}

// _typography.scss
h1,
.text--mega, .entry-title {
	@include responsive-text-size('mega');
}

h2,
.text--kilo {
	@include responsive-text-size('kilo');
}

h3,
.text--hecto {
	@include responsive-text-size('hecto');
}

h4,
.text--deca {
	@include responsive-text-size('deca');
}

h5,
h6,
body,
html,
.text--base {
	@include responsive-text-size('base');
}

.text--deci {
	@include responsive-text-size('deci');
}

small,
.text--centi {
	@include responsive-text-size('centi');
}

.text--milli {
	@include responsive-text-size('milli');
}